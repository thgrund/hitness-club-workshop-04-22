-- Intro

-- 1.1 Computer Musik, LiveCoding, TopLap und Algorave
-- TopLap https://toplap.org
-- Algorave https://www.youtube.com/watch?v=S2EZqikCIfY

-- 1.2 TidalCycles
-- Tidal https://tidalcycles.org/ Patterns mit Code.

-- Sprache zur Beschreibung von Sequenzen
-- (Bspw. polyphon, polyrhythmisch, generativ -> hä?! genau :-D).

-- Umfassende Bibliothek ... zum Transformieren und Kombinieren der Sequenzen.

-- Erzeugt schnell komplexe Patterns mit einfachen Zutaten

-- Kann keine Töne von sich aus erzeugen, verwendet:
-- https://supercollider.github.io/
-- https://github.com/musikinformatik/SuperDirt

-- Ist eingebettet in der Sprache Haskell https://www.haskell.org/
-- Es gibt neuerdings andere Ansätze wie Strudel https://strudel.tidalcycles.org/tutorial/

-- 1.3 Warum Haskell und wie profitiert TidalCycles davon?
--  - Statisches Typ-System
--  - Keine Nebenwirkungen
--  - Funktionen höherer Ordnung
--  - Functors, Applicative und Monads

-- 1.4 Pattern und Time
-- # Quellen von Sounds
-- ## Synthesizers
-- ## Samples
-- ## Effekte

-- 3 Patterns
-- ## concatenation (naive)
-- ## speed up, speed down:
-- ## combine two patterns
-- ## functions that produce and modify patterns: run, slow, rev
-- ## parallel composition: stack, ","
-- ## cat and speed-up: fastcat "[ .. ]"
-- ## time-shift  ~>
-- ## Mini Notation
-- ## Euklid, Polymetrik und Polyryhtmik
-- https://tidalcycles.org/docs/patternlib/tutorials/mini_notation/

-- # Nearly all above
--
-- # references:
-- * https://tidalcycles.org/docs/
-- * https://github.com/musikinformatik/SuperDirt
-- * https://github.com/tidalcycles/Dirt-Samples
-- * https://www.imn.htwk-leipzig.de/~waldmann/etc/untutorial/tc/types/
