-- Intro

Tidal https://tidalcycles.org/ Patterns mit Code.

Sprache zur Beschreibung von Sequenzen
(Bspw. polyphon, polyrhythmisch, generativ -> hä?! genau :-D).

Umfassende Bibliothek ... zum Transformieren und Kombinieren der Sequenzen.

Erzeugt schnell komplexe Patterns mit einfachen Zutaten

Kann keine Töne von sich aus erzeugen, verwendet:
https://supercollider.github.io/
https://github.com/musikinformatik/SuperDirt

Ist eingebettet in der Sprache Haskell https://www.haskell.org/

-- 1.1 Warum Haskell und wie profitiert TidalCycles davon?
1. Statisches Typ-System
2. Keine Nebenwirkungen
3. Funktionen höherer Ordnung
4. Functors, Applicative und Monads

-- 1.2 Pattern and Time

-- # Quellen von Sounds

-- ## Synthesizers

-- ## Samples

-- ## Effekte

-- 3 Patterns
## concatenation (naive)
## speed up, speed down:
## combine two patterns
## functions that produce and modify patterns: run, slow, rev
## parallel composition: stack, ","
## cat and speed-up: fastcat "[ .. ]"
## time-shift  ~>

# Nearly all above

# references:
* https://tidalcycles.org/docs/
* https://github.com/musikinformatik/SuperDirt
* https://github.com/tidalcycles/Dirt-Samples
* https://www.imn.htwk-leipzig.de/~waldmann/etc/untutorial/tc/types/
